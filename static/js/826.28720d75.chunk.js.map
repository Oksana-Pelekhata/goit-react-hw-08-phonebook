{"version":3,"file":"static/js/826.28720d75.chunk.js","mappings":"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","sources":["components/ContactForm/styled.js","redux/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/styled.js","components/ContactList/ContactList.jsx","components/FilterForm/styled.js","components/FilterForm/FilterForm.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// import { Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const Section = styled.section\n`\npadding: 15px 30px;\n\n`\n\nexport const Title = styled.h2`\nfont-size: ${({theme}) => theme.fontSizes.large};\nmargin: 20px;\n`;\n\nexport const Form = styled.form`\ndisplay: flex;\nflex-direction: column;\nborder: 2px solid #33439dcf;\npadding: 25px 10px 15px 10px;\nborder-radius: 6px;\nbox-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\nwidth: 250px;\nmargin-left: 20px;\ngap: 20px;\n// padding: 15px;\n`\nexport const Label = styled.label`\ndisplay: block;\n`\n\nexport const Input = styled.input`\nborder: 1px solid black;\ndisplay: block;\nmargin-top: 10px;`\n\nexport const Button = styled.button`\nwidth: 100px;\ndisplay: block;\ncursor: pointer;\npadding: 5px 10px;`","\nexport const contactsSelector = state => state.contacts;\n\n// const filterContacts = (array, filter) => {\n//     return [...array].filter(el =>\n//       el.name.toLowerCase().includes(filter.toLowerCase()))\n// }\n\nexport const filterSelector = state => state.filter;\n\n","import React from 'react';\nimport { Section, Title, Form } from \"./styled\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelector } from 'redux/selectors';\nimport { addContactThunk } from 'redux/contacts/thunks';\nimport { TextField } from '@mui/material';\nimport { Button } from 'pages/RegisterPage.styled';\n\n\nexport const ContactForm = () => {\n\n  const { items } = useSelector(contactsSelector)\n  const dispatch = useDispatch();\n  \n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    const name = e.target.elements.name.value\n    const number = e.target.elements.number.value\n\n    const newContact = {\n      name,\n      number\n    }\n    \n        if (items.some((contact)=>(contact.name.toLowerCase() === name.toLowerCase()))) {\n      return alert(`Contact with the nane ${name} already exists in your contact-list.`);\n    }\n\n    if (items.some((contact)=>(contact.number === number))) {\n      return alert(`Contact with the number ${number} already exists in your contact-list.`);\n    }\n    dispatch(addContactThunk(newContact))\n    e.target.reset()\n  }\n\n    return (\n        <Section>\n            <Title>Create new contact</Title>\n                <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n               \n            <TextField id=\"outlined-basic\" label=\"Name\" variant=\"outlined\"\n\t\t\t\t\t\tname='name'\n\t\t\t\t\t\ttype='text'\n              size=\"small\"\n             required/>\n                 \n                    \n                   \n            <TextField id=\"outlined-basic\" label=\"Number\" variant=\"outlined\"\n\t\t\t\t\t\tname='number'\n\t\t\t\t\t\ttype='tel'\n              size=\"small\"\n             required         />\n              \n                    <Button type=\"submit\">Add contact</Button>\n                </Form>\n        </Section>\n    )\n}\n\n","import styled from 'styled-components';\n\nexport const Section = styled.section\n`\npadding: 15px 30px;\n// margin-top: 40px;\n`\n\nexport const Title = styled.h2`\nfont-size: ${({theme}) => theme.fontSizes.large};\nmargin: 20px;\n`;\n\nexport const Item = styled.li`\nfont-size: ${({ theme }) => theme.fontSizes.medium};\nmargin-bottom: 15px;\n`\n\n// export const ContactButton = styled.button`\n//   background-color: #00aeef;\n// //   color: white;\n//   padding: 8px 12px;\n// `\nexport const ContactName = styled.p`\nmargin: 0;\n  margin-right: 10px;\n  display: inline-block;\n`;\n\nexport const ContactItem = styled.li`\n// display: flex;\nfont-size: ${({ theme }) => theme.fontSizes.medium};\n// margin-bottom: 15px;\n`\nexport const ContactButton = styled.button`\ndisplay: inline-block;\n  background-color: #db0a0ab5 ;\n  padding: 5px 12px;\n  border: none;\n  border-radius: 4px;\n  margin-left: auto;\n  height: 24px;\n  `","import {Section, ContactItem, ContactName } from './styled'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelector, filterSelector } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { deleteContactThunk, getContactsThunk } from 'redux/contacts/thunks';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { createTheme, ThemeProvider } from '@mui/material/styles'\nimport IconButton from '@mui/material/IconButton';\n\n\nexport const ContactList = () => {\n  const { items, isLoading, error } = useSelector(contactsSelector)\n\n  const dispatch = useDispatch();\n\n  const { filter } = useSelector(filterSelector)\n  \n  useEffect(()=> {dispatch(getContactsThunk())},[dispatch])\n\n    const filterContacts = () => {\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    };\n  \n  const getFilteredContacts = filterContacts()\n\n  const handleDelete = (id) => {\n    dispatch(deleteContactThunk(id))\n  }\n\n  const theme = createTheme({\n  palette: {\n    neutral: {\n      main: '#33439dcf',\n  contrastText: '#fff'\n    },\n  },\n});\n  return (\n    <Section>\n      {error && <h2>{error}</h2>}\n      {isLoading && <p>Is loading...</p>}\n        {items.length === 0 ? (\n          <p>You don't have contacts yet</p>\n        ) :\n          (<ul> {\n            getFilteredContacts.map(({ id, name, number }) => {\n              return (\n                <ContactItem key={id}>\n                  <ContactName>\n                    {name}: {number}\n                  </ContactName>\n                  <ThemeProvider theme={theme}>\n {/* <Button type=\"button\"\n                    variant=\"contained\"\n                    startIcon={<DeleteIcon />}\n                    onClick={() => handleDelete(id)}\n                      color='neutral'\n                      size='small'\n                  >\n                  \n        \n        Delete\n                    </Button> */}\n                    <IconButton aria-label=\"delete\"\n                      onClick={() => handleDelete(id)}\n                      color='neutral'\n                      size=\"large\">\n  <DeleteIcon fontSize=\"inherit\" />\n</IconButton>\n                  </ThemeProvider>\n                </ContactItem>\n              );\n            })\n          }\n          </ul>)}\n        </Section>\n       )\n    \n}\n\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding: 15px 30px;\n  \n`;\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 250px;\n  margin-left: 20px;\n  gap: 20px;\n  padding: 20px 15px;\n  border: 2px solid #33439dcf;\n// padding: 25px 10px 15px 10px;\nborder-radius: 6px;\nbox-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n`;\nexport const Label = styled.label`\n  display: block;\n`;\n\nexport const SectionTitle = styled.h3`\nmargin: 0\n`\n\nexport const Input = styled.input`\n  border: 1px solid black;\n  display: block;\n  margin-top: 10px;\n  color: black;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  display: block;\n  cursor: pointer;\n  padding: 5px 10px;\n`;\n\nexport const Title = styled.h2`\n  font-size: ${({ theme }) => theme.fontSizes.large};\n  margin: 20px;\n`;","import PropTypes from 'prop-types';\nimport { Section, StyledForm, Title, SectionTitle } from './styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { TextField } from '@mui/material';\n\nexport const FilterForm = ({ label }) => {\n  const dispatch = useDispatch()\n\n  const handleChange = ({target : {value}}) => {\n    dispatch(setFilter(value))\n  }\n  return (\n    <Section>\n      <Title>Contacts</Title>\n      <StyledForm>\n        <SectionTitle>Find contacts by name</SectionTitle>\n        <TextField id=\"filter\" label='name' variant=\"outlined\"\n\t\t\t\t\t\tname='filter'\n\t\t\t\t\t\ttype='text'\n          size=\"small\"\n          onChange={handleChange}\n        />\n      </StyledForm>\n    </Section>\n  );\n};\n\nFilterForm.propTypes = {\n  label: PropTypes.string.isRequired,\n};","\nimport { ContactForm } from 'components/ContactForm'\nimport { ContactList } from 'components/ContactList'\nimport { FilterForm } from 'components/FilterForm'\nimport React from 'react'\n\n\n\nconst ContactsPage = () => {\n  \n  return (\n    <>\n       <ContactForm  />\n        <FilterForm label=\"Find contacts by name\"\n        />\n          <ContactList />\n    </>\n\n  )\n}\n\nexport default ContactsPage"],"names":["Section","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","_ref","theme","fontSizes","large","Form","_templateObject3","_templateObject4","_templateObject5","_templateObject6","contactsSelector","state","contacts","filterSelector","filter","ContactForm","items","useSelector","dispatch","useDispatch","_jsxs","children","_jsx","autoComplete","onSubmit","e","preventDefault","name","target","elements","value","number","newContact","some","contact","toLowerCase","alert","concat","addContactThunk","reset","TextField","id","label","variant","type","size","required","Button","ContactName","_ref2","medium","ContactItem","_ref3","ContactList","_useSelector","isLoading","error","useEffect","getContactsThunk","getFilteredContacts","includes","createTheme","palette","neutral","main","contrastText","length","map","ThemeProvider","IconButton","onClick","deleteContactThunk","handleDelete","color","DeleteIcon","fontSize","StyledForm","SectionTitle","_templateObject7","FilterForm","onChange","setFilter","_Fragment"],"sourceRoot":""}